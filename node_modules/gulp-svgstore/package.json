{
  "name": "gulp-svgstore",
  "version": "3.0.0",
  "description": "Combine svg files into one with <symbol> elements",
  "main": "index.js",
  "scripts": {
    "test": "gulp test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/w0rm/gulp-svgstore"
  },
  "author": {
    "name": "Andrey Kuzmin",
    "email": "unsoundscapes@gmail.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/w0rm/gulp-svgstore/issues"
  },
  "homepage": "https://github.com/w0rm/gulp-svgstore",
  "dependencies": {
    "cheerio": "^0.17.0",
    "gulp-util": "^3.0.0",
    "through2": "^0.4.1"
  },
  "devDependencies": {
    "connect": "^3.1.0",
    "gm": "^1.16.0",
    "gulp": "^3.6.2",
    "gulp-inject": "^1.0.1",
    "gulp-mocha": "^0.5.2",
    "serve-static": "^1.4.3",
    "tmp": "0.0.24",
    "wd": "^0.3.4"
  },
  "keywords": [
    "gulpplugin",
    "svg",
    "icon",
    "sprite"
  ],
  "readme": "gulp-svgstore\n=============\n\n[![Build Status](https://api.travis-ci.org/w0rm/gulp-svgstore.png)](https://travis-ci.org/w0rm/gulp-svgstore)\n\nCombine svg files into one with `<symbol>` elements.\nRead more about this in [CSS Tricks article](http://css-tricks.com/svg-symbol-good-choice-icons/).\n\nIf you need similar plugin for grunt, I encourage you to check [grunt-svgstore](https://github.com/FWeinb/grunt-svgstore).\n\n## Options:\n\n* fileName — the name of result file, default: 'svgstore.svg'\n* prefix — prefix for ids of the <symbol> elements, default: ''\n* inlineSvg — output only `<svg>` element without `<?xml ?>` and `DOCTYPE` to use inline, default: false\n* transformSvg($svg, done) — transform combined svg with [cheerio](https://github.com/cheeriojs/cheerio)\n  and return result in callback `done(err, $svg)`\n\n## Usage\n\nThe following script will combine circle.svg and square.svg into single svg file with\n`<symbol>` elements. Additionally pass through [gulp-svgmin](https://github.com/ben-eb/gulp-svgmin) to minimize svg payload size.\n\n```js\nvar svgstore = require('gulp-svgstore')\nvar gulp = require('gulp')\nvar svgmin = require('gulp-svgmin')\ngulp.task('default', function () {\n  return gulp.src('test/src/*.svg')\n             .pipe(svgmin())\n             .pipe(svgstore({ fileName: 'icons.svg', prefix: 'icon-' }))\n             .pipe(gulp.dest('test/'))\n})\n```\n\n### Inlining svgstore result into html body\n\nTo inline combined svg into html body I suggest using [gulp-inject](https://github.com/klei/gulp-inject).\nThe following gulp task will inject svg into\n`<!-- inject:svg --><!-- endinject -->` placeholder of test/src/inline-svg.html.\n\n\n```js\nvar svgstore = require('gulp-svgstore')\nvar inject = require('gulp-inject')\nvar gulp = require('gulp')\ngulp.task('default', function () {\n  var svgs = gulp.src('test/src/*.svg')\n                 .pipe(svgstore({ prefix: 'icon-', inlineSvg: true }))\n  function fileContents (filePath, file) {\n    return file.contents.toString('utf8')\n  }\n  return gulp\n    .src('test/src/inline-svg.html')\n    .pipe(inject(svgs, { transform: fileContents }))\n    .pipe(gulp.dest('test/dest'))\n})\n\n```\n\n### Using svg as external file\n\nThere is a problem with `<use xlink:href=\"external.svg#icon-name\">` in Internet Explorer,\nso you should either inline everything into body with a\n[simple script like this](https://gist.github.com/w0rm/621a56a353f7b2a6b0db) or\npolyfil with [svg4everybody](https://github.com/jonathantneal/svg4everybody).\n\n\n## Transform result svg\n\n### Add display:none\n\nTo add `style=\"display:none\"` use the following transformSvg function:\n\n```js\nfunction transformSvg ($svg, done) {\n  $svg.attr('style', 'display:none')\n  done(null, $svg)\n}\n```\n\n### Remove fills\n\nTo remove all fill attributes (so you can set fill from css) use the following transformSvg function:\n\n```js\nfunction transformSvg ($svg, done) {\n  $svg.find('[fill]').removeAttr('fill')\n  done(null, $svg)\n}\n```\n\nRemove only particular fills (e.g. fill=\"none\"):\n\n```js\nfunction transformSvg ($svg, done) {\n  $svg.find('[fill=\"none\"]').removeAttr('fill')\n  done(null, $svg)\n}\n```\n\n## Changelog\n\n* 3.0.0\n  * Used cheerio instead of libxmljs (changes transformSvg syntax)\n\n* 2.0.0\n  * Added check for inputs before generating SVG.\n\n* 1.0.1\n  * Added check for missing viewBox in original svg.\n\n* 1.0.0\n  * Initial release.\n",
  "readmeFilename": "README.md",
  "_id": "gulp-svgstore@3.0.0",
  "_shasum": "e6d20f2cb4a739d7f604f7b387ea80b65c48622d",
  "_from": "gulp-svgstore@3.0.0",
  "_resolved": "https://registry.npmjs.org/gulp-svgstore/-/gulp-svgstore-3.0.0.tgz"
}
